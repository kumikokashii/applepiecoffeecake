{"ast":null,"code":"var _jsxFileName = \"/Users/kumiko/projectA/applepiecoffeecake/web-app/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { questionMap } from './questionMap.js';\nimport { useState, Fragment } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const {\n    questionNum\n  } = props;\n  const questionList = questionMap[questionNum];\n  const blankPosition = questionList.const[(inputs, setInputs)] = useState({});\n\n  const inputOnChange = (event, i) => {\n    let newInputs = { ...inputs\n    };\n    newInputs[i] = event.target.value;\n    setInputs(newInputs);\n  };\n\n  const questionListDOM = questionList.map((line, i) => /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [line + \" \", /*#__PURE__*/_jsxDEV(\"input\", {\n      value: inputs[i],\n      onChange: event => inputOnChange(event, i),\n      className: \"line-input\",\n      placeholder: \"______\",\n      size: inputs[i] ? inputs[i].length : 5\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), \".\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this));\n\n  const getLines = () => {};\n\n  const copyLines = () => {\n    navigator.clipboard.writeText(getLines());\n    console.log(\"clicked on copy\", getLines());\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [questionNum, \" is the questionNum.\", /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"lines\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"fillin\",\n        children: \"Fill in the blank.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), questionListDOM]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"action\",\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        class: \"button\",\n        onClick: copyLines,\n        children: \"copy my lines\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"footer\",\n      children: \"\\xA9 2021 Kumiko Kashii\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"BKBLI19f89LXrwX8b3KtH3R8uGQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/kumiko/projectA/applepiecoffeecake/web-app/src/App.js"],"names":["questionMap","useState","Fragment","App","props","questionNum","questionList","blankPosition","const","inputs","setInputs","inputOnChange","event","i","newInputs","target","value","questionListDOM","map","line","length","getLines","copyLines","navigator","clipboard","writeText","console","log"],"mappings":";;;AAAA,OAAO,WAAP;AACA,SAAQA,WAAR,QAA0B,kBAA1B;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,OAAnC;;;AAEA,SAASC,GAAT,CAAaC,KAAb,EAAoB;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAAkBD,KAAxB;AACA,QAAME,YAAY,GAAGN,WAAW,CAACK,WAAD,CAAhC;AACA,QAAME,aAAa,GAAGD,YAAY,CAElCE,KAFsB,EAEfC,MAAM,EAAEC,SAFO,KAEMT,QAAQ,CAAC,EAAD,CAFpC;;AAGA,QAAMU,aAAa,GAAG,CAACC,KAAD,EAAQC,CAAR,KAAc;AAClC,QAAIC,SAAS,GAAG,EAAC,GAAGL;AAAJ,KAAhB;AACAK,IAAAA,SAAS,CAACD,CAAD,CAAT,GAAeD,KAAK,CAACG,MAAN,CAAaC,KAA5B;AACAN,IAAAA,SAAS,CAACI,SAAD,CAAT;AACD,GAJD;;AAMA,QAAMG,eAAe,GAAGX,YAAY,CAACY,GAAb,CAAiB,CAACC,IAAD,EAAON,CAAP,kBACvC,QAAC,QAAD;AAAA,eACGM,IAAI,GAAG,GADV,eAEE;AACE,MAAA,KAAK,EAAEV,MAAM,CAACI,CAAD,CADf;AAEE,MAAA,QAAQ,EAAGD,KAAD,IAAWD,aAAa,CAACC,KAAD,EAAQC,CAAR,CAFpC;AAGE,MAAA,SAAS,EAAC,YAHZ;AAIE,MAAA,WAAW,EAAC,QAJd;AAKE,MAAA,IAAI,EAAEJ,MAAM,CAACI,CAAD,CAAN,GAAYJ,MAAM,CAACI,CAAD,CAAN,CAAUO,MAAtB,GAA+B;AALvC;AAAA;AAAA;AAAA;AAAA,YAFF,oBASG;AAAA;AAAA;AAAA;AAAA,YATH;AAAA;AAAA;AAAA;AAAA;AAAA,UADsB,CAAxB;;AAcA,QAAMC,QAAQ,GAAG,MAAM,CAEtB,CAFD;;AAIA,QAAMC,SAAS,GAAG,MAAM;AACtBC,IAAAA,SAAS,CAACC,SAAV,CAAoBC,SAApB,CAA8BJ,QAAQ,EAAtC;AACAK,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAZ,EAA+BN,QAAQ,EAAvC;AACD,GAHD;;AAKA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA,eACGhB,WADH,uCAGE;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA,8BACE;AAAM,QAAA,KAAK,EAAC,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEGY,eAFH;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,eAOE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA,6BACE;AAAM,QAAA,KAAK,EAAC,QAAZ;AAAqB,QAAA,OAAO,EAAEK,SAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAPF,eAUE;AAAK,MAAA,KAAK,EAAC,QAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAVF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAnDQnB,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import './App.css';\nimport {questionMap} from './questionMap.js';\nimport { useState, Fragment } from 'react';\n\nfunction App(props) {\n  const { questionNum } = props;\n  const questionList = questionMap[questionNum];\n  const blankPosition = questionList.\n\n  const [inputs, setInputs] = useState({});\n  const inputOnChange = (event, i) => {\n    let newInputs = {...inputs};\n    newInputs[i] = event.target.value;\n    setInputs(newInputs);\n  }\n\n  const questionListDOM = questionList.map((line, i) =>\n    <Fragment>\n      {line + \" \"}\n      <input\n        value={inputs[i]}\n        onChange={(event) => inputOnChange(event, i)}\n        className=\"line-input\"\n        placeholder=\"______\"\n        size={inputs[i] ? inputs[i].length : 5}\n      />\n      .<br/>\n    </Fragment> \n  )\n\n  const getLines = () => {\n\n  }\n\n  const copyLines = () => {\n    navigator.clipboard.writeText(getLines());\n    console.log(\"clicked on copy\", getLines());\n  }\n\n  return (\n    <div className=\"App\">\n      {questionNum} is the questionNum.\n\n      <div class=\"lines\">\n        <span class=\"fillin\">Fill in the blank.</span>\n        {questionListDOM}\n      </div>\n      <div class=\"action\">\n        <span class=\"button\" onClick={copyLines}>copy my lines</span>\n      </div>\n      <div class=\"footer\">\n        &copy; 2021 Kumiko Kashii\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}