{"version":3,"sources":["components/FillInTheBlank/questionMap.js","components/FillInTheBlank/index.js","components/PickOne/readingMap.js","components/PickOne/index.js","index.js"],"names":["questionMap","0","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","FillInTheBlank","questionList","questionNum","Math","floor","random","Object","keys","length","getRandomQuestion","blankPositions","map","line","start","indexOf","initInputs","forEach","_","i","useState","inputs","setInputs","buttonClicked","setButtonClicked","questionListDOM","substring","value","onChange","event","newInputs","target","inputOnChange","className","placeholder","size","autocapitalize","copyButtonDOM","onClick","setTimeout","lines","replace","join","navigator","clipboard","writeText","year","Date","getFullYear","readingMap","PickOne","pickedNum","setPickedNum","randomNums","n","nums","temp","includes","push","getRandomNums","src","image","text","href","ReactDOM","render","exact","path","component","to","document","getElementById"],"mappings":"kPAAaA,EAAc,CACzBC,EAAG,CACD,uBACA,wBACA,wCAGFC,EAAG,CACD,uBACA,sBACA,qDAGFC,EAAG,CACD,yBACA,2BACA,qDAGFC,EAAG,CACD,4CACA,kCACA,+DAGFC,EAAG,CACD,mCACA,2DACA,0EAGFC,EAAG,CACD,mCACA,4BACA,2BAGFC,EAAG,CACD,2BACA,yBACA,2CAGFC,EAAG,CACD,yBACA,sBACA,iCAGFC,EAAG,CACD,2BACA,8BACA,8EAGFC,EAAG,CACD,uBACA,6BACA,oEAGFC,GAAI,CACF,2BACA,2CACA,iFAGFC,GAAI,CACF,yBACA,sCACA,4DAGFC,GAAI,CACF,2BACA,yDACA,8EAGFC,GAAI,CACF,4BACA,sBACA,+EAGFC,GAAI,CACF,sBACA,8CACA,4EAGFC,GAAI,CACF,6CACA,uCACA,0EAGFC,GAAI,CACF,6BACA,mDACA,yFAGFC,GAAI,CACF,gCACA,4BACA,2FAGFC,GAAI,CACF,sCACA,0CACA,+GAGFC,GAAI,CACF,kCACA,mCACA,sEAGFC,GAAI,CACF,yBACA,mCACA,6EAGFC,GAAI,CACF,uBACA,wBACA,0EAGFC,GAAI,CACF,iCACA,sBACA,kEAGFC,GAAI,CACF,mCACA,iCACA,8EAGFC,GAAI,CACF,uBACA,6BACA,wEAGFC,GAAI,CACF,gCACA,oBACA,oEAGFC,GAAI,CACF,uDACA,qDACA,0EAGFC,GAAI,CACF,mDACA,oCACA,8EAGFC,GAAI,CACF,yDACA,4CACA,gFAGFC,GAAI,CACF,iDACA,8CACA,qGAGFC,GAAI,CACF,gDACA,kDACD,wFAGDC,GAAI,CACF,gDACA,uCACA,uEAGFC,GAAI,CACF,gDACA,yCACA,kFAGFC,GAAI,CACF,kDACA,qCACA,qDAGFC,GAAI,CACF,8CACA,sCACA,wCAGFC,GAAI,CACF,+CACA,iDACA,0EAGFC,GAAI,CACF,wDACA,6CACA,0DAGFC,GAAI,CACF,wCACA,+BACA,+BAGFC,GAAI,CACF,6BACA,8CACA,2E,eCrJWC,EA/EQ,WACrB,IAIMC,EAJoB,WACxB,IAAMC,EAAcC,KAAKC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","file":"static/js/main.fd38e52e.chunk.js","sourcesContent":["export const questionMap = {\n  0: [\n    'I see a hole on ___.',\n    'It is a shape of ___.',\n    'When I put my ear on it, I hear ___.'\n  ],\n\n  1: [\n    'I see a line on ___.',\n    'It\\'s a part of ___.',\n    'When I smile at it long enough, it starts to ___.'\n  ],\n\n  2: [\n    'I see a circle on ___.',\n    'Inside it, there is ___.',\n    'When I push the center of it, it sounds like ___.'\n  ],\n\n  3: [\n    'There\\'s a door; on the other side is ___.',\n    'There are ___ people out there.',\n    'When I wave at them, it makes me wanna say: “___”'\n  ],\n\n  4: [\n    'The nearest trash can is in ___.',\n    'When I look down in it, the smallest thing I see is ___.',\n    'When I make an okay sign at it, it makes me wanna say: “___”'\n  ],\n\n  5: [\n    'There\\'s a piece of paper on ___.',\n    'I touch it; it feels ___.',\n    'I flip it; it says ___.'\n  ],\n\n  6: [\n    'I see a box made of ___.',\n    'Inside, there are ___.',\n    'When I knock on it, it sounds like ___.'\n  ],\n\n  7: [\n    'I see a number on ___.',\n    'That number is ___.',\n    'I want to have that many ___.'\n  ],\n\n  8: [\n    'There\\'s a branch on ___.',\n    'Its tip is pointing at ___.',\n    'When I try to look like that branch, I hear myself saying: “___”'\n  ],\n\n  9: [\n    'I see a star on ___.',\n    'It looks as big as my ___.',\n    'When I go around that star, it says on its back: “___”'\n  ],\n\n  10: [\n    'I hear the sound of ___.',\n    'A photo of that scene would include ___.',\n    'After I silently laugh for three minutes, I feel like saying: “___”'\n  ],\n\n  11: [\n    'I see a shadow on ___.',\n    'Looks like it\\'s been there for ___.',\n    'When I put my back against it, I see ___ straight ahead.'\n  ],\n\n  12: [\n    'I see space between ___.',\n    'It\\'s big enough to slide ___ sheets of paper in there.',\n    'When I point a microphone at it, I hear it loud and clear: “___”'\n  ],\n\n  13: [\n    'I see an alphabet on ___.',\n    'It\\'s a part of ___.',\n    'When I bake some cookies shaped like that alphabet, I\\'d make them with ___.'\n  ],\n\n  14: [\n    'I see a can of ___.',\n    'Looks like the best time to open it is ___.',\n    'When I wrap my arms around it and give it a hug, I smell a scent of ___.'\n  ],\n\n  15: [\n    'The tallest object I see from here is ___.',\n    'Looks like it\\'s about ___ years old.',\n    'When I make a peace sign at it, it makes me wanna say: “___”'\n  ],\n\n  16: [\n    'I hear footsteps from ___.',\n    'Sounds like that person is in the middle of ___.',\n    'When I wink in the direction of the footsteps, it makes me wanna say: “___”'\n  ],\n\n  17: [\n    'The nearest window is in ___.',\n    'Inside the frame are ___.',\n    'After I view the scenery for three minutes, I wanna give it a title of: “___”'\n  ],\n\n  18: [\n    'The nearest flat surface is in ___.',\n    'The temperature of that surface is ___.',\n    'After I lay down there and look up for three minutes, I wanna give that view a nickname of: “___”'\n  ],\n\n  19: [\n    'I see a string attached to ___.',\n    'Looks like it was dyed with ___.',\n    'When I give it a handshake, it makes me wanna say: “___”'\n  ],\n\n  20: [\n    'I see a flower on ___.',\n    'It\\'s opening itself towards ___.',\n    'When I put my face right in front, it makes me wanna say: “___”'\n  ],\n\n  21: [\n    'I see a line on ___.',\n    'It\\'s connecting ____.',\n    'When I make a funny face at it, it makes me wanna say: “___”'\n  ],\n\n  22: [\n    'I see the nearest dust on ___.',\n    'It smells like ___.',\n    'When I whisper into it, it makes me wanna say: “___”'\n  ],\n\n  23: [\n    'I see the nearest bottle at ___.',\n    'Its bottom is shaped like ___.',\n    'When I give it a roll on the floor, it makes me wanna say: “___”'\n  ],\n\n  24: [\n    'I see a roll of ___.',\n    'At the very center is ___.',\n    'After I clap and cheer at it, it makes me wanna say: “___”'\n  ],\n\n  25: [\n    'I see a piece of hair on ___.',\n    'Its color is ___.',\n    'When I make a wish at it, I find my self saying: “___”'\n  ],\n\n  26: [\n    'The nearest living being around me is ___ right now.',\n    'That being is as big as ___ pieces of gummy bears.',\n    'When I play peekaboo in that direction, I\\'m almost certain I hear ___.'\n  ],\n\n  27: [\n    'The nearest thing I can drink water from is ___.',\n    'Inside it, there\\'s ___ right now.',\n    'When I pick i up and dance with it, it makes me wanna say: “___”'\n  ],\n\n  28: [\n    'The nearest thing shaped like a ring is ___ right now.',\n    'It\\'s as big as ___ pieces of donut holes.',\n    'When I put my nose through that ring, it makes me wanna say: “___”'\n  ],\n\n  29: [\n    'The tallest thing in my view is ___ right now.',\n    'It\\'s as tall as ___ pieces of Pocky sticks.',\n    'When I lie down and look up to find the top of that thing, it makes me wanna say: “___”'\n  ],\n\n  30: [\n    'The tiniest thing around me is ___ right now.',\n    'It\\'s as tiny as ___ pieces of strawberry seeds.',\n   ' When I hold it in my hand and go for a walk, it makes me wanna say: “___”'\n  ],\n\n  31: [\n    'The softest thing around me is ___ right now.',\n    'It\\'s as soft as ___ pieces of bread.',\n    'When I give it a gentle hug, it makes me wanna say: “___”'\n  ],\n\n  32: [\n    'The loudest sound around me is ___ right now.',\n    'Its origin seems to be ___ steps away.',\n    'When I shake my butt in that direction, it makes me wanna say: “___”'\n  ],\n\n  33: [\n    'I snap my fingers; my thumb is pointing at ___.',\n    'I wave at it; I start to hear ___.',\n    'I shake my butt at it; I\\'m facing ___ to do that.'\n  ],\n\n  34: [\n    'I turn around; my lips are pointing at ___.',\n    'Looks like it\\'s been there for ___.',\n    'I give it a hug; it smells like ___.'\n  ],\n\n  35: [\n    'I stretch out; my armpit is pointing at ___.',\n    'I point my ear towards it; it sounds like ___.',\n    'I push a smily face towards it; it makes me wanna say: “___”'\n  ],\n\n  36: [\n    'I start humming; the first thing I see moving is ___.',\n    'I wink at it; I see it moving towards ___.',\n    'I play an air guitar at it; I find myself singing ___.'\n  ],\n\n  37: [\n    'The nearest light is coming from ___.',\n    'It shines the colors of ___.',\n    'Through it all, I hear ___.'\n  ],\n\n  38: [\n    'I see a table made of ___.',\n    'Looks like it was set up for people to ___.',\n    'When I lay myself on top of it, it makes me wanna say: “___”'\n  ]\n}\n","import { useState, Fragment } from 'react';\nimport { questionMap } from './questionMap.js';\nimport './style.css';\n\nconst FillInTheBlank = () => {\n  const getRandomQuestion = () => {\n    const questionNum = Math.floor(Math.random() * Object.keys(questionMap).length);\n    return questionMap[questionNum]\n  }\n  const questionList = getRandomQuestion();\n  \n  const blankPositions = questionList.map((line) => {\n    const start = line.indexOf(\"___\");\n    return [start, start+2];\n  })\n\n  let initInputs = {};\n  questionList.forEach((_, i) => {\n    initInputs[i] = \"\";\n  })\n\n  const [inputs, setInputs] = useState(initInputs);\n  const [buttonClicked, setButtonClicked] = useState(false);\n  \n  const inputOnChange = (event, i) => {\n    let newInputs = {...inputs};\n    newInputs[i] = event.target.value;\n    setInputs(newInputs);\n  }\n\n  const questionListDOM = questionList.map((line, i) =>\n    blankPositions[i][0] === -1 ? <Fragment>{line}<br/></Fragment> : (\n      <Fragment>\n        {line.substring(0, blankPositions[i][0])}\n        <input\n          key={i}\n          value={inputs[i]}\n          onChange={(event) => inputOnChange(event, i)}\n          className=\"line-input\"\n          placeholder=\"______\"\n          size={inputs[i].length || 5}\n          autocapitalize={blankPositions[i][0] === 0 ? \"on\" : \"none\"}\n        />\n        {line.substring(blankPositions[i][1]+1, line.length)}\n        <br/>\n      </Fragment>\n    )\n  )\n\n  const copyLines = () => {\n    setButtonClicked(true);\n    setTimeout(() => setButtonClicked(false), 1000);\n\n    const lines = questionList.map((line, i) => {\n      if (inputs[i].length === 0) {\n        return line\n      }\n      return line.replace(\"___\", \"*\" + inputs[i] + \"*\")\n    }).join(\"\\n\");\n    navigator.clipboard.writeText(lines);\n  }\n\n  const copyButtonDOM = (\n    <span \n      className={\"button\" + (buttonClicked ? \" buttonClicked\" : \"\")}\n      onClick={copyLines}\n    >\n      {buttonClicked ? \"copied\" : \"copy my lines\"}\n    </span>\n  )\n\n  const year = new Date().getFullYear();\n\n  return (\n    <div className=\"main-fillin\">\n      <div className=\"fillin\">Fill in the blank.</div>\n      <div className=\"lines\">{questionListDOM}</div>\n      {copyButtonDOM}\n      <div className=\"footer\">&copy; {year} Kumiko Kashii</div>\n    </div>\n  );\n}\n\nexport default FillInTheBlank;\n","export const readingMap = {\n  0: {\n    'image': 'test.jpg',\n    'text': \"Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. Lalala Test 0. \"\n  },\n\n  1: {\n    'image': 'test.jpg',\n    'text': \"Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. Tatata testing 1. \"\n  }\n\n}\n","import { useState } from 'react';\nimport { readingMap } from './readingMap.js';\nimport './style.css';\n\nconst PickOne = () => {\n  const [pickedNum, setPickedNum] = useState(-1);\n\n  const getRandomNums = (n=2) => {\n    let nums = [];\n    while (nums.length < n) {\n      let temp = Math.floor(Math.random() * Object.keys(readingMap).length);\n      if (!nums.includes(temp)) {\n        nums.push(temp);\n      }\n    }\n    return nums;\n  }\n  const randomNums = getRandomNums();\n\n  const year = new Date().getFullYear();\n\n  return (\n    (pickedNum === -1) ? (\n      <div className=\"main-pick-one\">\n        <div className=\"pickone\">Pick one.</div>\n        <div className=\"options\">{\n          randomNums.map((_, i) => \n            <div className=\"option\" onClick={()=>setPickedNum(i)}>This one.</div>\n          )}\n        </div>\n      </div>\n    ) : (\n      <div className=\"main-pick-one reading\">\n        <div className=\"reading-image\"><img src={\"/readingImages/\"+readingMap[pickedNum].image} /></div>\n        <div className=\"reading-text\">{readingMap[pickedNum].text}</div>\n        <div className=\"private-reading\">\n          If you have a specific question, you may benefit from a private reading. If interested, email your question to:<br/>\n          Kumiko at <a href = \"mailto: kumiverse@gmail.com\">kumiverse@gmail.com</a> for further information. (The availability is limited, and there is a small but required fee.)\n        </div>\n        <div className=\"footer-pick-one\">&copy; {year} Kumiko Kashii</div>\n      </div>\n    )\n  );\n}\n\nexport default PickOne;\n","import ReactDOM from 'react-dom';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\n\nimport FillInTheBlank from './components/FillInTheBlank';\nimport PickOne from './components/PickOne';\n\nReactDOM.render((\n  <Router>\n    <Switch>\n      <Route exact path=\"/\" component={FillInTheBlank} />\n      <Route exact path=\"/nice\" component={PickOne} />\n      <Redirect to=\"/\" />\n    </Switch>\n  </Router>),\n  document.getElementById('root')\n);"],"sourceRoot":""}